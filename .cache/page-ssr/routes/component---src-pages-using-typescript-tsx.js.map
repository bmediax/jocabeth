{"version":3,"file":"component---src-pages-using-typescript-tsx.js","mappings":"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","sources":["webpack://gatsby-starter-default/./src/pages/using-typescript.tsx","webpack://gatsby-starter-default/./src/components/header.js","webpack://gatsby-starter-default/./src/components/layout.js","webpack://gatsby-starter-default/./src/components/seo.js"],"sourcesContent":["// If you don't want to use TypeScript you can delete this file!\nimport * as React from \"react\"\nimport { PageProps, Link, graphql } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\n\ntype DataProps = {\n  site: {\n    buildTime: string\n  }\n}\n\nconst UsingTypescript: React.FC<PageProps<DataProps>> = ({ data, path }) => (\n  <Layout>\n    <Seo title=\"Using TypeScript\" />\n    <h1>Gatsby supports TypeScript by default!</h1>\n    <p>\n      This means that you can create and write <em>.ts/.tsx</em> files for your\n      pages, components etc. Please note that the <em>gatsby-*.js</em> files\n      (like gatsby-node.js) currently don't support TypeScript yet.\n    </p>\n    <p>\n      For type checking you'll want to install <em>typescript</em> via npm and\n      run <em>tsc --init</em> to create a <em>tsconfig</em> file.\n    </p>\n    <p>\n      You're currently on the page \"{path}\" which was built on{\" \"}\n      {data.site.buildTime}.\n    </p>\n    <p>\n      To learn more, head over to our{\" \"}\n      <a href=\"https://www.gatsbyjs.com/docs/typescript/\">\n        documentation about TypeScript\n      </a>\n      .\n    </p>\n    <Link to=\"/\">Go back to the homepage</Link>\n  </Layout>\n)\n\nexport default UsingTypescript\n\nexport const query = graphql`\n  {\n    site {\n      buildTime(formatString: \"YYYY-MM-DD hh:mm a z\")\n    }\n  }\n`\n","import * as React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { Link } from \"gatsby\"\n\nconst Header = ({ siteTitle }) => (\n  <header\n    style={{\n      background: `rebeccapurple`,\n      marginBottom: `1.45rem`,\n    }}\n  >\n    <div\n      style={{\n        margin: `0 auto`,\n        maxWidth: 960,\n        padding: `1.45rem 1.0875rem`,\n      }}\n    >\n      <h1 style={{ margin: 0 }}>\n        <Link\n          to=\"/\"\n          style={{\n            color: `white`,\n            textDecoration: `none`,\n          }}\n        >\n          {siteTitle}\n        </Link>\n      </h1>\n    </div>\n  </header>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n","/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.com/docs/use-static-query/\n */\n\nimport * as React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nimport Header from \"./header\"\nimport \"./layout.css\"\n\nconst Layout = ({ children }) => {\n  const data = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `)\n\n  return (\n    <>\n      <Header siteTitle={data.site.siteMetadata?.title || `Title`} />\n      <div\n        style={{\n          margin: `0 auto`,\n          maxWidth: 960,\n          padding: `0 1.0875rem 1.45rem`,\n        }}\n      >\n        <main>{children}</main>\n        <footer\n          style={{\n            marginTop: `2rem`,\n          }}\n        >\n          Â© {new Date().getFullYear()}, Built with\n          {` `}\n          <a href=\"https://www.gatsbyjs.com\">Gatsby</a>\n        </footer>\n      </div>\n    </>\n  )\n}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/use-static-query/\n */\n\nimport * as React from \"react\";\n\nimport { graphql, useStaticQuery } from \"gatsby\";\n\nimport { Helmet } from \"react-helmet\";\nimport PropTypes from \"prop-types\";\n\nfunction Seo({ description, lang, meta, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  );\n\n  const metaDescription = description || site.siteMetadata.description;\n  // const defaultTitle = site.siteMetadata?.title;\n\n  return (\n    // titleTemplate={defaultTitle ? `%s | ${defaultTitle}` : null}\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata?.author || ``,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  );\n}\n\nSeo.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n};\n\nSeo.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n};\n\nexport default Seo;\n"],"names":["React","Link","Layout","Seo","UsingTypescript","data","path","title","site","buildTime","href","to","query","PropTypes","Header","siteTitle","background","marginBottom","margin","maxWidth","padding","color","textDecoration","propTypes","string","defaultProps","children","siteMetadata","marginTop","Date","getFullYear","node","isRequired","Helmet","description","lang","meta","metaDescription","name","content","property","author","concat","arrayOf","object"],"sourceRoot":""}